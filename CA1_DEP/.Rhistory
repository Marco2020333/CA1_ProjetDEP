# Create a vector
> X <- c(12,7,3,18,2,54,-21,8,-5)
X <- c(12,7,3,18,2,54,-21,8,-5)
#Find Mean
result.mean <- mean(X)
print(result.mean)
result.mean <- mean(X,trim = 0.3)
print(result.mean)
# Create a vector
x <-c(12,7,3,4.2,18,2,54,-21,8,-5,NA)
#Find mean
result.mean<- mean(x)
print(result.mean)
#Find mean dropping Na values
result.mean<- mean(x,na.rm = true)
result.mean<- mean(x,na.rm = True)
result.mean <- mean(x,na.rm = True)
result.mean <- mean(x,na.rm = TRUE)
print(result.mean)
# Create the vector
x <- c(12,7,3,4.2,18,2,54,-21,8,-5)
Find the median.
#Find the median.
media.result <- median(x)
print(median.result)
median.result <- median(x)
print(median.result)
# create the function.
getmode <- function(v){}
getmode <- function(v){
unigv <- unique(v)
uniqv[which.max(tabulate(match(v,uniqv)))]}
# Create the vector with numbers
v <- c(2,1,2,3,1,2,3,4,1,5,5,3,2,3)
# Calculate the mode using the user function
result <- getmode(v)
result <- getmode(v)
# create the function.
getmode <- function(v){ uniqv <- unique(v) uniqv[which.max(tabulate(match(v, uniqv)))]}
getmode <- function(v){ uniqv <- unique(v) uniqv[which.max(tabulate(match(v, uniqv)))]}
# create the function.
getmode <- function(v){
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v,uniqv)))]}
# Create the vector with numbers
v <- c(2,1,2,3,1,2,3,4,1,5,5,3,2,3)
# Calculate the mode using the user function
q()
hist(invsqrt_weight,
break)
par(mfrow= c(1,1))
X <-rnorm(1000000,
mean=mean(invsqrt_weight),
sd =sd(invsqrt_weight))
par(mfrow= c(1,1))
getwd()
library(dplyr)
library(ggolot2)
library(Fselector)
install.packages("Fselector")
library(ggolot2)
install.packages("ggolot2")
library(dplyr)
library(ggolot2)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
# Set the path
path <- "file:///C:/Users/Marco dos Santos/Downloads/Data sets-20231031"
install.packages("mlbench")
library(mlbench)
Dataset <-read.csv(path, sep=",", dec = ".", row.names = 1)
Dataset <-read.csv(path, sep=",", dec = ".", row.names = 1)
# Set the path
path <- "file:///C:/Users/Marco dos Santos/Downloads/BostonHousing"
Dataset <-read.csv(path, sep=",", dec = ".", row.names = 1)
# Set the path
path <- "file:///C:/Users/Marco dos Santos/Downloads"
install.packages("mlbench")
install.packages("mlbench")
Dataset <-read.csv(path, sep=",", dec = ".", row.names = 1)
# Set the path
path <- "file:///C:/Users/Marco dos Santos/Downloads/BostonHousing.csv"
Dataset <-read.csv(path, sep=",", dec = ".", row.names = 1)
str(Dataset)
dim(Dataset)
#Calculate the scores
scores <- liner.correlation(med~., Daset)
#Calculate the scores
Scores <- liner.correlation(med~., Dataset)
#Calculate the scores
Scores <- linear.correlation(med~., Dataset)
#Calculate the scores
Scores <- linear.correlation(medv~., Dataset)
#Calculate the scores
Scores <- linear.correlation(medV~., Dataset)
#Calculate the scores
scores <- linear.correlation(medV~., Dataset)
scores
#Calculate the scores
scores <- linear.correlation(medv~., Dataset)
#Calculate the scores
scores <- linear.correlation(medv ~ .,Dataset)
#Calculate the scores
scores <-linear.correlation(medv ~ .,Dataset)
#Calculate the scores
scores <-linear.correlation(medv~ .,Dataset)
#Calculate the scores
scores <-linear.correlation(medv~ .,Dataset)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(ggplot2)
library(Fselector)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("Fselector")
install.packages("Fselector")
library(Fselector)
install.packages("FSelector")
getwd()
getwd()
getwd()
setwd("C:/Users/Marco dos Santos/Documents/Course Web/CA1_ProjetDEP/CA1_DEP")
install.packages(c("tidyverse","dummy","caTools","conflicted"))
install.packages("skimr")
install.packages("caret")
library(conflicted)
library(tidyverse)
library(dummy)
library(caTools)
library(skimr)
library(dplyr)
library(caret)
library(ggplot2)
covid_2022 <-read_csv(file="covid_2022.csv")
setwd("C:/Users/Marco dos Santos/Documents/Course Web/CA1_ProjetDEP/CA1_DEP")
covid_2022 <-read_csv(file="covid_2022.csv")
setwd("C:/Users/Marco dos Santos/Documents/Course Web/CA1_ProjetDEP/CA1_DEP")
covid_2022 <-read_csv(file="covid_2022.csv")
view(covid_2022)
#A
skim_report <- skim(covid_2022)
# Print the summary
print(skim_report)
# Categorical Variables
ggplot(covid_2022, aes(x = countriesAndTerritories)) +
geom_bar() +
labs(title = "Distribution of Countries and Territories")
# Categorical Variables
ggplot(covid_2022, aes(x = countriesAndTerritories)) +
geom_bar() +
labs(title = "Distribution of Countries and Territories") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels at a 45-degree angle
ggplot(covid_2022, aes(x = geoId)) +
geom_bar() +
labs(title = "Distribution of Geographic IDs")
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(covid_2022, aes(x = geoId)) +
geom_bar() +
labs(title = "Distribution of Geographic IDs")
ggplot(your_data, aes(x = countryterritoryCode)) +
geom_bar() +
labs(title = "Distribution of Country/Territory Codes")
ggplot(covid_2022, aes(x = countryterritoryCode)) +
geom_bar() +
labs(title = "Distribution of Country/Territory Codes")
ggplot(covid_2022, aes(x = continentExp)) +
geom_bar() +
labs(title = "Distribution of Continents")
ggplot(covid_2022, aes(y = countryterritoryCode)) +
geom_bar() +
labs(title = "Distribution of Country/Territory Codes")
ggplot(covid_2022, aes(x = continentExp)) +
geom_bar() +
labs(title = "Distribution of Continents")
# Discrete Variables
ggplot(covid_2022, aes(x = day)) +
geom_bar() +
labs(title = "Distribution of Days")
# Discrete Variables
ggplot(covid_2022, aes(x = day, fill = factor(day))) +  # Adding fill aesthetic for color
geom_bar() +
labs(title = "Distribution of Days") +
scale_fill_manual(values = "green")  # Setting the color to green
# Discrete Variables
ggplot(covid_2022, aes(x = day, fill = "green")) +  # Fill setting the color
geom_bar() +
labs(title = "Distribution of Days")
# Discrete Variables
ggplot(covid_2022, aes(x = day, fill = "red")) +  # Fill setting the color
geom_bar() +
labs(title = "Distribution of Days")
ggplot(covid_2022, aes(x = month,, fill = "red")) +
geom_bar() +
labs(title = "Distribution of Months")
ggplot(covid_2022, aes(x = year, fill = "red")) +
geom_bar() +
labs(title = "Distribution of Years")
ggplot(covid_2022, aes(x = deaths, fill = "red")) +
geom_bar() +
labs(title = "Distribution of Deaths")
# Discrete Variables
ggplot(covid_2022, aes(x = day, colors(FALSE) = "red")) +  # Fill setting the color
# Discrete Variables
ggplot(covid_2022, aes(x = day, "red")) +  # Fill setting the color
geom_bar() +
labs(title = "Distribution of Days")
# Discrete Variables
ggplot(covid_2022, aes(x = day, fill = "red")) +  # Fill setting the color
geom_bar() +
labs(title = "Distribution of Days")
ggplot(covid_2022, aes(x = month, fill = "red")) +
geom_bar() +
labs(title = "Distribution of Months")
ggplot(covid_2022, aes(x = year, fill = "red")) +
geom_bar() +
labs(title = "Distribution of Years")
ggplot(covid_2022, aes(x = casesfill = "yellow")) +
ggplot(covid_2022, aes(x = cases,fill = "yellow")) +
geom_bar() +
labs(title = "Distribution of Cases")
ggplot(covid_2022, aes(x = deaths, fill = "red")) +
geom_bar() +
labs(title = "Distribution of Deaths")
ggplot(covid_2022, aes(x = cases,fill = "red")) +
geom_bar() +
labs(title = "Distribution of Cases")
ggplot(data = covid_2022, aes(x = cases)) +
geom_histogram(binwidth = 1000, fill = "purple", color = "black") +
labs(title = "Distribution of Cases")
ggplot(covid_2022, aes(x = cases,fill = "red")) +
geom_bar() +
labs(title = "Distribution of Cases")
ggplot(covid_2022, aes(x = cases)) +
geom_bar(binwidth = 1000, fill = "purple", color = "black") +
labs(title = "Distribution of Cases")
ggplot(covid_2022, aes(x = cases)) +
geom_bar(binwidth = 1000, fill = "purple", color = "red") +
labs(title = "Distribution of Cases")
ggplot(covid_2022, aes(x = cases)) +
geom_bar(binwidth = 1000, fill = "red") +
labs(title = "Distribution of Cases")
ggplot(covid_2022, aes(x = cases)) +
geom_bar(binwidth = 1000, fill = "purple", color = "red") +
labs(title = "Distribution of Cases")
ggplot(covid_2022, aes(x = deaths)) +
geom_bar(binwidth = 1000, fill = "purple", color = "red") +
labs(title = "Distribution of Deaths")
#Continuous Variables
ggplot(your_data, aes(x = popData2020)) +
geom_density() +
labs(title = "Density Plot of Population Data")
#Continuous Variables
ggplot(covid_2022, aes(x = popData2020)) +
geom_density() +
labs(title = "Density Plot of Population Data")
scale_x_continuous(labels = scales::comma)
ggplot(covid_2022, aes(x = popData2020)) +
geom_density() +
labs(title = "Density Plot of Population Data") +
scale_x_continuous(labels = scales::comma)
ggplot(your_data, aes(x = dateRep)) +
geom_line() +
labs(title = "Time Series Plot of DateRep")
convert_date$dateRep <- as.Date(covid_2022$dateRep, format = "%d/%m/%Y")
covid_2022$dateRep <- as.Date(covid_2022$dateRep, format = "%d/%m/%Y")
ggplot(covid_2022, aes(x = dateRep)) +
geom_line() +
labs(title = "Time Series Plot of DateRep")
ggplot(covid_2022, aes(x = dateRep)) +
geom_line() +
labs(title = "Time Series Plot of DateRep")
# Check the data type of dateRep
str(covid_2022$dateRep)
# Convert dateRep to Date type
covid_2022$dateRep <- as.Date(covid_2022$dateRep, format = "%d/%m/%Y")
# Check the first few rows of the dataset to verify the changes
head(covid_2022)
# Plot the time series
ggplot(covid_2022, aes(x = dateRep)) +
geom_line() +
labs(title = "Time Series Plot of DateRep")
#Continuous Variables
ggplot(covid_2022, aes(x = popData2020)) +
geom_density() +
labs(title = "Density Plot of Population Data") +
scale_x_continuous(labels = scales::comma)
# Convert dateRep to Date type
covid_2022$dateRep <- as.Date(covid_2022$dateRep, format = "%d/%m/%Y")
# Create a variable 'count' with a constant value of 1 for each date
covid_2022$Count <- 1
# Plot the bar chart
ggplot(covid_2022, aes(x = dateRep)) +
geom_bar(stat = "count") +
labs(title = "Bar Chart of DateRep")
ggplot(covid_2022, aes(x = continentExp)) +
geom_bar() +
labs(title = "Distribution of Continents")
ggplot(covid_2022, aes(x = continentExp,fill = "red")) +
geom_bar() +
labs(title = "Distribution of Continents")
ggplot(covid_2022, aes(x = continentExp)) +
geom_bar() +
labs(title = "Distribution of Continents")
ggplot(covid_2022, aes(x = continentExp)) +
geom_bar(stat = "count", width = 0.7, fill = "blue", color = "black") +
labs(title = "Distribution of Continents") +
theme_minimal()
ggplot(covid_2022, aes(x = continentExp)) +
geom_bar(stat = "count", width = 0.7) +
labs(title = "Distribution of Continents") +
theme_minimal()
